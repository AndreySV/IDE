<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6.xsd"
         xsi:schemaLocation="http://www.plcopen.org/xml/tc6.xsd"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <fileHeader companyName="Unknown"
                productName="Unnamed"
                productVersion="1"
                creationDateTime="2013-01-29T14:01:00"/>
    <contentHeader name="Unnamed"
                   modificationDateTime="2013-02-26T15:59:13">
        <coordinateInfo>
            <fbd>
                <scaling x="0" y="0"/>
            </fbd>
            <ld>
                <scaling x="0" y="0"/>
            </ld>
            <sfc>
                <scaling x="0" y="0"/>
            </sfc>
        </coordinateInfo>
    </contentHeader>
    <types>
        <pous>
            <pou name="WORD_TO_MB_HOLDING" pouType="function">
                <interface>
                    <returnType>
                        <INT/>
                    </returnType>
                    <inputVars>
                        <variable name="ADDR">
                            <type>
                                <INT/>
                            </type>
                        </variable>
                    </inputVars>
                    <inputVars>
                        <variable name="IN_WORD">
                            <type>
                                <WORD/>
                            </type>
                        </variable>
                    </inputVars>
                </interface>
                <body>
                    <ST>
                    <![CDATA[
                     {{
                     #include <stdint.h>
                     typedef uint32_t u32;
                     typedef uint16_t u16;
                     typedef uint8_t u8;
                     extern u8 setU16Holding (u32 adr, u16 value);
                     WORD_TO_MB_HOLDING = setU16Holding(ADDR, IN_WORD);
                     }}
                    ]]>
                    </ST>
                </body>
            </pou>
            <pou name="MB_HOLDING_TO_WORD" pouType="function">
                <interface>
                    <returnType>
                        <WORD/>
                    </returnType>
                    <inputVars>
                        <variable name="ADDR">
                            <type>
                                <WORD/>
                            </type>
                        </variable>
                    </inputVars>
                </interface>
                <body>
                    <ST>
                        <![CDATA[
                     {{
                     #include <stdint.h>
                     typedef uint32_t u32;
                     typedef uint16_t u16;
                     typedef uint8_t u8;
                     extern u16 getU16Holding (u32 adr);
                     MB_HOLDING_TO_WORD = getU16Holding(ADDR);
                     }}
                    ]]>
                    </ST>
                </body>
            </pou>
            <pou name="WORD_TO_MB_INPUT" pouType="function">
                <interface>
                    <returnType>
                        <INT/>
                    </returnType>
                    <inputVars>
                        <variable name="ADDR">
                            <type>
                                <INT/>
                            </type>
                        </variable>
                    </inputVars>
                    <inputVars>
                        <variable name="IN_WORD">
                            <type>
                                <WORD/>
                            </type>
                        </variable>
                    </inputVars>
                </interface>
                <body>
                    <ST>
                        <![CDATA[
                     {{
                     #include <stdint.h>
                     typedef uint32_t u32;
                     typedef uint16_t u16;
                     typedef uint8_t u8;
                     extern u8 setU16Input(u32 adr, u16 value);
                     WORD_TO_MB_INPUT = setU16Input(ADDR, IN_WORD);
                     }}
                    ]]>
                    </ST>
                </body>
            </pou>
            <pou name="MB_INPUT_TO_WORD" pouType="function">
                <interface>
                    <returnType>
                        <WORD/>
                    </returnType>
                    <inputVars>
                        <variable name="ADDR">
                            <type>
                                <WORD/>
                            </type>
                        </variable>
                    </inputVars>
                </interface>
                <body>
                    <ST>
                        <![CDATA[
                     {{
                     #include <stdint.h>
                     typedef uint32_t u32;
                     typedef uint16_t u16;
                     typedef uint8_t u8;
                     extern u16 getU16Input (u32 adr);
                     MB_INPUT_TO_WORD = getU16Input(ADDR);
                     }}
                    ]]>
                    </ST>
                </body>
            </pou>
            <pou name="SET_COIL" pouType="function">
                <interface>
                    <returnType>
                        <INT/>
                    </returnType>
                    <inputVars>
                        <variable name="ADDR">
                            <type>
                                <INT/>
                            </type>
                        </variable>
                    </inputVars>
                    <inputVars>
                        <variable name="COIL_VALUE">
                            <type>
                                <BOOL/>
                            </type>
                        </variable>
                    </inputVars>
                </interface>
                <body>
                    <ST>
                        <![CDATA[
                     {{
                     #include <stdint.h>
                     typedef uint32_t u32;
                     typedef uint16_t u16;
                     typedef uint8_t u8;
                     extern u8 setCoil (u32 adr, u8 value);
                     SET_COIL = setCoil(ADDR, COIL_VALUE);
                     }}
                    ]]>
                    </ST>
                </body>
            </pou>
            <pou name="GET_COIL" pouType="function">
                <interface>
                    <returnType>
                        <BOOL/>
                    </returnType>
                    <inputVars>
                        <variable name="ADDR">
                            <type>
                                <INT/>
                            </type>
                        </variable>
                    </inputVars>
                </interface>
                <body>
                    <ST>
                        <![CDATA[
                     {{
                     #include <stdint.h>
                     typedef uint32_t u32;
                     typedef uint16_t u16;
                     typedef uint8_t u8;
                     extern u8 getCoil (u32 adr);
                     GET_COIL = getCoil(ADDR);
                     }}
                    ]]>
                    </ST>
                </body>
            </pou>
            <pou name="SET_DISC" pouType="function">
                <interface>
                    <returnType>
                        <INT/>
                    </returnType>
                    <inputVars>
                        <variable name="ADDR">
                            <type>
                                <INT/>
                            </type>
                        </variable>
                    </inputVars>
                    <inputVars>
                        <variable name="DISC_VALUE">
                            <type>
                                <BOOL/>
                            </type>
                        </variable>
                    </inputVars>
                </interface>
                <body>
                    <ST>
                        <![CDATA[
                     {{
                     #include <stdint.h>
                     typedef uint32_t u32;
                     typedef uint16_t u16;
                     typedef uint8_t u8;
                     extern u8 setDisc (u32 adr, u8 value);
                     SET_DISC = setDisc(ADDR, DISC_VALUE);
                     }}
                    ]]>
                    </ST>
                </body>
            </pou>
            <pou name="GET_DISC" pouType="function">
                <interface>
                    <returnType>
                        <BOOL/>
                    </returnType>
                    <inputVars>
                        <variable name="ADDR">
                            <type>
                                <INT/>
                            </type>
                        </variable>
                    </inputVars>
                </interface>
                <body>
                    <ST>
                        <![CDATA[
                     {{
                     #include <stdint.h>
                     typedef uint32_t u32;
                     typedef uint16_t u16;
                     typedef uint8_t u8;
                     extern u8 getDisc (u32 adr);
                     GET_DISC = getDisc(ADDR);
                     }}
                    ]]>
                    </ST>
                </body>
            </pou>
        </pous>
    </types>
    <instances>
        <configurations/>
    </instances>
</project>
